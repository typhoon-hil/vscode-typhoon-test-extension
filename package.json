{
  "name": "vscode-typhoon-test",
  "displayName": "Typhoon Test",
  "description": "Typhoon test extension for VS Code",
  "version": "0.1.0",
  "engines": {
    "vscode": "^1.85.0"
  },
  "icon": "images/logo.png",
  "publisher": "Typhoon-HIL",
  "repository": {
    "type": "git",
    "url": "https://github.com/typhoon-hil/vscode-typhoon-test-extension.git"
  },
  "categories": [
    "Testing",
    "Snippets",
    "Other"
  ],
  "license": "LGPL-3.0",
  "activationEvents": [
    "onLanguage:python"
  ],
  "main": "./dist/extension",
  "contributes": {
    "submenus": [
      {
        "id": "typhoon-test-submenu",
        "label": "Typhoon Test"
      }
    ],
    "keybindings": [
      {
        "command": "typhoon-test.runTests",
        "key": "F7",
        "when": "!typhoon-test.isRunning && workspaceFolderCount > 0"
      },
      {
        "command": "typhoon-test.stopTests",
        "key": "F8",
        "when": "typhoon-test.isRunning"
      },
      {
        "command": "typhoon-test.runTestsFromFile",
        "key": "Shift+F7",
        "when": "!typhoon-test.isRunning  && workspaceFolderCount > 0"
      }
    ],
    "configuration": {
      "title": "Typhoon Test",
      "properties": {
        "typhoon-test.lineSpacing": {
          "type": "integer",
          "default": 2,
          "minimum": 1,
          "description": "The number of blank lines to insert between top-level functions and classes"
        },
        "typhoon-test.apiWizardWorkspace": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "required": true
              },
              "type": {
                "type": "string",
                "enum": [
                  "class",
                  "module"
                ],
                "required": true
              },
              "alias": {
                "type": "string",
                "required": true
              }
            },
            "default": {},
            "description": "The module and class to display in the API wizard"
          }
        },
        "typhoon-test.testRun.interpreter": {
          "type": "string",
          "enum": [
            "embedded",
            "system",
            "custom"
          ],
          "default": "embedded",
          "enumDescriptions": [
            "Use embedded (Python 3) interpreter",
            "Use the system Python interpreter",
            "Use a custom Python interpreter"
          ],
          "markdownDescription": "The Python interpreter to use for running tests\n\nNote: In order to use the custom interpreter, you need to set the path to the interpreter in the `#typhoon-test.testRun.customInterpreterPath#`",
          "scope": "application"
        },
        "typhoon-test.testRun.customInterpreterPath": {
          "type": "string",
          "default": "",
          "markdownDescription": "The path to the custom Python interpreter to use for running tests. This path will be used if `#typhoon-test.testRun.interpreter#` is set to `custom`.\n\nYou can enter the path manually or [browse for the file](command:typhoon-test.pickInterpreterPath)",
          "scope": "application"
        },
        "typhoon-test.testRun.realTimeLogs": {
          "type": "boolean",
          "default": true,
          "description": "Enable real-time logging of steps in console",
          "scope": "application"
        },
        "typhoon-test.testRun.openReport": {
          "type": "boolean",
          "default": true,
          "description": "Open interactive Allure report after test finishes",
          "scope": "application"
        },
        "typhoon-test.testRun.cleanOldResults": {
          "type": "boolean",
          "default": true,
          "description": "Clean old test results before running new tests",
          "scope": "application"
        },
        "typhoon-test.testRun.pdfReport": {
          "type": "boolean",
          "default": true,
          "description": "Generate PDF report after test finishes",
          "scope": "application"
        },
        "typhoon-test.testRun.selectTestByName": {
          "type": "string",
          "default": "",
          "description": "Select based on name (full or partial match). Equivalent to -k pytest option",
          "scope": "application"
        },
        "typhoon-test.testRun.selectTestByMark": {
          "type": "string",
          "default": "",
          "description": "Select based on marks/tags. Equivalent to -m pytest option",
          "scope": "application"
        },
        "typhoon-test.testRun.additionalOptions": {
          "type": "string",
          "default": "",
          "description": "Pass additional options to pytest",
          "scope": "application"
        },
        "typhoon-test.pdfConfiguration.pdfCoverageTitle": {
          "type": "string",
          "default": "Typhoon HIL Test Coverage",
          "description": "The title of the coverage section in the PDF report"
        },
        "typhoon-test.pdfConfiguration.organizationalMotto": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "**Test**",
            "**_Design_**",
            "_Deploy_"
          ]
        },
        "typhoon-test.pdfConfiguration.typhoonHilLogo": {
          "type": "boolean",
          "default": true,
          "description": "Set Typhoon HIL logo in the PDF report"
        },
        "typhoon-test.pdfConfiguration.organizationalLogoFilepath": {
          "type": "string",
          "default": "",
          "markdownDescription": "The path to the organizational logo to include in the PDF report\n\nYou can enter the path manually or [browse for the file](command:typhoon-test.pickOrganizationalLogoFilepath).\n\n Note: The `#typhoon-test.pdfConfiguration.typhoonHilLogo#` setting must be set to `false` in order to use this setting"
        },
        "typhoon-test.pdfConfiguration.headerColor": {
          "type": "string",
          "default": "#333333",
          "format": "color-hex",
          "description": "The color of the header text in the PDF report"
        },
        "typhoon-test.pdfConfiguration.trace": {
          "type": "boolean",
          "default": true,
          "description": "Include trace in the report."
        },
        "typhoon-test.pdfConfiguration.steps": {
          "type": "boolean",
          "default": true,
          "description": "Include steps in the report."
        },
        "typhoon-test.pdfConfiguration.plots": {
          "type": "boolean",
          "default": true,
          "description": "Include plots in the report."
        }
      }
    },
    "commands": [
      {
        "command": "typhoon-test.showDocstringView",
        "title": "Show Docstring",
        "category": "Typhoon Test"
      },
      {
        "command": "typhoon-test.showArgumentsView",
        "title": "Show Arguments View",
        "category": "Typhoon Test"
      },
      {
        "command": "typhoon-test.handleTreeViewItemClicked",
        "title": "Handle Tree View Item Clicked",
        "category": "Typhoon Test"
      },
      {
        "command": "typhoon-test.addPythonEntity",
        "title": "Add module to list",
        "icon": "$(add)",
        "category": "Typhoon Test"
      },
      {
        "command": "typhoon-test.removePythonEntity",
        "title": "Remove module from list",
        "icon": "$(remove)",
        "category": "Typhoon Test"
      },
      {
        "command": "typhoon-test.saveApiWizardWorkspace",
        "title": "Save API Wizard Workspace",
        "icon": "$(save)",
        "category": "Typhoon Test"
      },
      {
        "command": "typhoon-test.openTestRunConfiguration",
        "title": "Open Test Run Configuration",
        "category": "Typhoon Test",
        "icon": "$(gear)"
      },
      {
        "command": "typhoon-test.openPdfConfiguration",
        "title": "Open PDF Configuration",
        "category": "Typhoon Test",
        "icon": "$(gear)"
      },
      {
        "command": "typhoon-test.pickInterpreterPath",
        "title": "Select File Path",
        "category": "Typhoon Test"
      },
      {
        "command": "typhoon-test.runTests",
        "title": "Run Tests",
        "icon": "$(debug-start)",
        "category": "Typhoon Test"
      },
      {
        "command": "typhoon-test.stopTests",
        "title": "Stop Tests",
        "icon": "$(debug-stop)",
        "category": "Typhoon Test"
      },
      {
        "command": "typhoon-test.runTestsFromFile",
        "title": "Run Tests From File",
        "category": "Typhoon Test"
      },
      {
        "command": "typhoon-test.runTestsFromTestItem",
        "title": "Run Tests From Here",
        "category": "Typhoon Test",
        "icon": "$(debug-start)"
      },
      {
        "command": "typhoon-test.collectTests",
        "title": "Collect Tests",
        "category": "Typhoon Test",
        "icon": "$(list-flat)"
      },
      {
        "command": "typhoon-test.collectTestsFromTestItem",
        "title": "Collect Tests From Here",
        "category": "Typhoon Test",
        "icon": "$(list-flat)"
      },
      {
        "command": "typhoon-test.pickOrganizationalLogoFilepath",
        "title": "Select File Path",
        "category": "Typhoon Test"
      },
      {
        "command": "typhoon-test.runTestsFromExplorer",
        "title": "Run With Typhoon Test",
        "category": "Typhoon Test"
      },
      {
        "command": "typhoon-test.viewTestInCode",
        "title": "View Test In Code",
        "category": "Typhoon Test"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "api-wizard",
          "title": "Typhoon API Wizard",
          "icon": "images/api-wizard.svg"
        },
        {
          "id": "pytestMonitor",
          "title": "Typhoon Pytest Monitor",
          "icon": "images/pytest-monitor.svg"
        }
      ]
    },
    "views": {
      "api-wizard": [
        {
          "id": "typhoon-test.pythonEntityView",
          "name": "Function List"
        },
        {
          "id": "typhoon-test.docstringView",
          "name": "Function Documentation",
          "type": "webview"
        },
        {
          "id": "typhoon-test.argumentsView",
          "name": "Function Arguments",
          "type": "webview"
        }
      ],
      "pytestMonitor": [
        {
          "id": "typhoon-test.pytestMonitorView",
          "name": "Pytest Monitor"
        },
        {
          "id": "typhoon-test.pdfConfigurationView",
          "name": "PDF Configuration",
          "type": "webview"
        },
        {
          "id": "typhoon-test.testRunConfigurationView",
          "name": "Test Run Configuration",
          "type": "webview"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "typhoon-test.pythonEntityView",
        "contents": "Add a module or class to view its methods or functions"
      },
      {
        "view": "typhoon-test.pytestMonitorView",
        "contents": "Run pytest tests and monitor the progress. In order to use the Pytest Monitor, please open the tests folder in workspace \n [Run Tests](command:typhoon-test.runTests) \n [Collect Tests](command:typhoon-test.collectTests)",
        "enablement": "workspaceFolderCount > 0"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "typhoon-test.addPythonEntity",
          "when": "view == typhoon-test.pythonEntityView",
          "group": "navigation"
        },
        {
          "command": "typhoon-test.saveApiWizardWorkspace",
          "when": "view == typhoon-test.pythonEntityView",
          "group": "navigation"
        },
        {
          "command": "typhoon-test.stopTests",
          "when": "view == typhoon-test.pytestMonitorView && typhoon-test.isRunning",
          "group": "navigation"
        },
        {
          "command": "typhoon-test.runTests",
          "when": "view == typhoon-test.pytestMonitorView && !typhoon-test.isRunning && workspaceFolderCount > 0",
          "group": "navigation"
        },
        {
          "command": "typhoon-test.collectTests",
          "when": "view == typhoon-test.pytestMonitorView && !typhoon-test.isRunning && workspaceFolderCount > 0",
          "group": "navigation"
        },
        {
          "command": "typhoon-test.openTestRunConfiguration",
          "when": "view == typhoon-test.testRunConfigurationView",
          "group": "navigation"
        },
        {
          "command": "typhoon-test.openPdfConfiguration",
          "when": "view == typhoon-test.pdfConfigurationView",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "typhoon-test.removePythonEntity",
          "when": "view == typhoon-test.pythonEntityView && (viewItem == class || viewItem == module)",
          "group": "inline"
        },
        {
          "command": "typhoon-test.runTestsFromTestItem",
          "when": "viewItem == testItem || viewItem == testItem.folder",
          "group": "inline"
        },
        {
          "command": "typhoon-test.collectTestsFromTestItem",
          "when": "viewItem == testItem || viewItem == testItem.folder",
          "group": "inline"
        },
        {
          "command": "typhoon-test.runTestsFromTestItem",
          "when": "viewItem == testItem || viewItem == testItem.folder",
          "group": "navigation"
        },
        {
          "command": "typhoon-test.collectTestsFromTestItem",
          "when": "viewItem == testItem || viewItem == testItem.folder",
          "group": "navigation"
        },
        {
          "command": "typhoon-test.viewTestInCode",
          "when": "viewItem == testItem",
          "group": "navigation"
        }
      ],
      "commandPalette": [
        {
          "command": "typhoon-test.showDocstringView",
          "when": "false"
        },
        {
          "command": "typhoon-test.showArgumentsView",
          "when": "false"
        },
        {
          "command": "typhoon-test.handleTreeViewItemClicked",
          "when": "false"
        },
        {
          "command": "typhoon-test.removePythonEntity",
          "when": "false"
        },
        {
          "command": "typhoon-test.addPythonEntity",
          "when": "view.typhoon-test.pythonEntityView.visible"
        },
        {
          "command": "typhoon-test.saveApiWizardWorkspace",
          "when": "view.typhoon-test.pythonEntityView.visible"
        },
        {
          "command": "typhoon-test.pickOrganizationalLogoFilepath",
          "when": "false"
        },
        {
          "command": "typhoon-test.viewTestInCode",
          "when": "false"
        },
        {
          "command": "typhoon-test.collectTestsFromTestItem",
          "when": "false"
        },
        {
          "command": "typhoon-test.runTestsFromTestItem",
          "when": "false"
        },
        {
          "command": "typhoon-test.runTestsFromExplorer",
          "when": "false"
        },
        {
          "command": "typhoon-test.pickInterpreterPath",
          "when": "false"
        },
        {
          "command": "typhoon-test.stopTests",
          "when": "typhoon-test.isRunning"
        },
        {
          "command": "typhoon-test.runTestsFromFile",
          "when": "editorLangId == python && workspaceFolderCount > 0 && !typhoon-test.isRunning"
        },
        {
          "command": "typhoon-test.runTests",
          "when": "workspaceFolderCount > 0 && !typhoon-test.isRunning"
        }
      ],
      "editor/title": [
        {
          "submenu": "typhoon-test-submenu",
          "group": "Typhoon Test",
          "when": "editorLangId == python"
        }
      ],
      "editor/context": [
        {
          "submenu": "typhoon-test-submenu",
          "group": "Typhoon Test",
          "when": "editorLangId == python"
        }
      ],
      "explorer/context": [
        {
          "command": "typhoon-test.runTestsFromExplorer",
          "when": "resourceLangId == python || explorerResourceIsFolder || explorerResourceIsRoot",
          "group": "typhoon-test-group"
        }
      ],
      "typhoon-test-submenu": [
        {
          "command": "typhoon-test.openTestRunConfiguration"
        },
        {
          "command": "typhoon-test.openPdfConfiguration"
        },
        {
          "command": "typhoon-test.runTests",
          "when": "!typhoon-test.isRunning && workspaceFolderCount > 0"
        },
        {
          "command": "typhoon-test.stopTests",
          "when": "typhoon-test.isRunning"
        },
        {
          "command": "typhoon-test.runTestsFromFile",
          "when": "!typhoon-test.isRunning && workspaceFolderCount > 0"
        }
      ],
      "editor/title/run": [
        {
          "command": "typhoon-test.runTests",
          "group": "navigation@1",
          "when": "workspaceFolderCount > 0 && !typhoon-test.isRunning"
        },
        {
          "command": "typhoon-test.runTestsFromFile",
          "group": "navigation@1",
          "when": "editorLangId == python && workspaceFolderCount > 0 && !typhoon-test.isRunning"
        }
      ]
    }
  },
  "scripts": {
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test",
    "compile": "webpack --mode development",
    "watch": "webpack --mode development --watch",
    "vscode:prepublish": "npm run package",
    "package": "webpack --mode production --devtool hidden-source-map"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.7",
    "@types/node": "20.x",
    "@types/vscode": "^1.85.0",
    "@typescript-eslint/eslint-plugin": "^7.14.1",
    "@typescript-eslint/parser": "^7.11.0",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^8.57.0",
    "tree-sitter": "^0.21.0",
    "tree-sitter-python": "^0.21.0",
    "ts-loader": "^9.5.1",
    "typescript": "^5.4.5",
    "webpack": "^5.95.0",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "copy-webpack-plugin": "^12.0.2"
  }
}
